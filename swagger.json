{
  "openapi": "3.0.3",
  "info": {
    "title": "Basic Banking System - OpenAPI 3.0",
    "description": "This is a Basic Banking System API based on the OpenAPI 3.0 specification.",
    "contact": {
      "email": "habibalfrb@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Operations about users"
    },
    {
      "name": "accounts",
      "description": "Operations about accounts"
    },
    {
      "name": "transactions",
      "description": "Operations about transactions"
    },
    {
      "name": "auth",
      "description": "Operations about authentication"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieve a list of users",
        "description": "Retrieve all registered users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "John Doe"
                          },
                          "email": {
                            "type": "string",
                            "example": "johndoe@mail.com"
                          }
                        },
                        "example": [
                          {
                            "id": 1,
                            "name": "John Doe",
                            "email": "johndoe@mail.com"
                          },
                          {
                            "id": 2,
                            "name": "Skylar White",
                            "email": "breakingback@crack.com"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to get all user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to get all user data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a new user",
        "description": "Register a new user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Create a new user in banking system",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "johndoe@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "johndoe123"
                  },
                  "identityType": {
                    "type": "string",
                    "example": "KTP"
                  },
                  "identityNumber": {
                    "type": "string",
                    "example": 6171050808080005
                  },
                  "address": {
                    "type": "string",
                    "example": "Jl. Jalan, Gg. Gang, No. 11"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User John Doe is successfully created!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@mail.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieve user by id",
        "description": "Retrieve user information detail and profile by id",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "johndoe@mail.com"
                        },
                        "identityType": {
                          "type": "string",
                          "example": "KTP"
                        },
                        "identityNumber": {
                          "type": "string",
                          "example": 6171050808080005
                        },
                        "address": {
                          "type": "string",
                          "example": "Jl. Jalan, Gg. Gang, No. 11"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user id format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "User ID must be a valid number"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed get user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to get user data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Retrieve a list of accounts",
        "description": "Retrieve all registered accounts",
        "operationId": "getAccounts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "userId": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "bankName": {
                            "type": "string"
                          },
                          "bankAccountNumber": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "id": 1,
                      "userId": 1,
                      "bankName": "BCA",
                      "bankAccountNumber": 2318792138671238,
                      "balance": 1500000
                    },
                    {
                      "id": 2,
                      "userId": 2,
                      "bankName": "Mandiri",
                      "bankAccountNumber": 121763127781238,
                      "balance": 95000000
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to get all account data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to get all account data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Create a new bank account",
        "description": "Register a new bank account",
        "operationId": "createAccount",
        "requestBody": {
          "description": "Create a new bank account in banking system",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "bankName": {
                    "type": "string",
                    "example": "BCA"
                  },
                  "bankAccountNumber": {
                    "type": "string",
                    "example": 2318792138671238
                  },
                  "balance": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1500000
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "New bank account with account number 2318792138671238 has successfully added to user with id 1"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "bankName": {
                          "type": "string",
                          "example": "BCA"
                        },
                        "bankAccountNumber": {
                          "type": "string",
                          "example": 2318792138671238
                        },
                        "balance": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1500000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bank account already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bank account already exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create bank account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create a new account"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Retrieve account by id",
        "description": "Retrieve account information detail",
        "operationId": "getAccountById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "userId": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "bankName": {
                          "type": "string",
                          "example": "BCA"
                        },
                        "bankAccountNumber": {
                          "type": "string",
                          "example": 2318792138671238
                        },
                        "balance": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1500000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid account id format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Account ID must be a valid number"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bank account does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed get account data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to get account data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Retrieve a list of transactions",
        "description": "Retrieve all transactions",
        "operationId": "getTransactions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "sourceAccountId": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "destinationAccountId": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "amount": {
                            "type": "integer",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "id": 1,
                      "sourceAccountId": 1,
                      "destinationAccountId": 2,
                      "amount": 250000
                    },
                    {
                      "id": 2,
                      "sourceAccountId": 2,
                      "destinationAccountId": 1,
                      "amount": 400000
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Failed to get all transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to get all transaction data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Create a new transaction",
        "description": "Add a new transaction",
        "operationId": "createTransaction",
        "requestBody": {
          "description": "Create a new transaction in banking system by transferring a certain amount from a source bank account to another destination bank account",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 1
                  },
                  "destinationAccountId": {
                    "type": "integer",
                    "format": "int32",
                    "example": 2
                  },
                  "amount": {
                    "type": "integer",
                    "format": "int32",
                    "example": 250000
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully transferred 250000 from bank account with id 1 to bank account with id 2"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "sourceAccountId": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "destinationAccountId": {
                          "type": "integer",
                          "format": "int32",
                          "example": 2
                        },
                        "amount": {
                          "type": "integer",
                          "format": "int32",
                          "example": 250000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Source bank account does not have sufficient balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Source bank account does not have sufficient balance"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Destination bank account does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Destination bank account does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create transaction"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Retrieve transaction by id",
        "description": "Retrieve transaction information detail",
        "operationId": "getTransactionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "sourceAccountId": {
                          "type": "integer",
                          "format": "int32",
                          "example": 1
                        },
                        "destinationAccountId": {
                          "type": "integer",
                          "format": "int32",
                          "example": 2
                        },
                        "amount": {
                          "type": "integer",
                          "format": "int32",
                          "example": 250000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transaction id format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction ID must be a valid number"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Transaction does not exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed get transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to get transaction data"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create a new credential (user)",
        "description": "register a new user",
        "operationId": "register",
        "requestBody": {
          "description": "Create a new user in banking system",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Kathy Joannet"
                  },
                  "email": {
                    "type": "string",
                    "example": "kjoannet0@godaddy.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "tJ5=2+@.&92k@,L"
                  },
                  "identityType": {
                    "type": "string",
                    "example": "SIM"
                  },
                  "identityNumber": {
                    "type": "string",
                    "example": 2517309437874406
                  },
                  "address": {
                    "type": "string",
                    "example": "325 Bartillon Way"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "User Kathy Joannet is successfully created!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 3
                        },
                        "name": {
                          "type": "string",
                          "example": "Kathy Joannet"
                        },
                        "email": {
                          "type": "string",
                          "example": "kjoannet0@godaddy.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Email already exist"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create user"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Log in with registered credentials",
        "description": "Log in with registered email and password, then received a JWT Bearer token",
        "operationId": "login",
        "requestBody": {
          "description": "Submit email and password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "kjoannet0@godaddy.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "tJ5=2+@.&92k@,L"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 3
                        },
                        "name": {
                          "type": "string",
                          "example": "Kathy Joannet"
                        },
                        "email": {
                          "type": "string",
                          "example": "kjoannet0@godaddy.com"
                        },
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwibmFtZSI6IkthdGh5IEpvYW5uZXQiLCJlbWFpbCI6Imtqb2FubmV0MEBnb2RhZGR5LmNvbSIsImlhdCI6MTczMDM1NjMxMX0.-PC7PcGHNlcyGimNMbfJmkcIkTSmZSWUAWZCQOPufsk"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid email or password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to login"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/authenticate": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Authenticate",
        "description": "Authenticate access token",
        "operationId": "authUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully authenticated"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int32",
                          "example": 2
                        },
                        "name": {
                          "type": "string",
                          "example": "Kathy Joannet"
                        },
                        "email": {
                          "type": "string",
                          "example": "kjoannet0@godaddy.com"
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int32",
                              "example": 2
                            },
                            "identityType": {
                              "type": "string",
                              "example": "SIM"
                            },
                            "identityNumber": {
                              "type": "string",
                              "example": 2517309437874406
                            },
                            "address": {
                              "type": "string",
                              "example": "325 Bartillon Way"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}